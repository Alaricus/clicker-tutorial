{"version":3,"sources":["reducer.js","Clicker.js","Autoclicker.js","App.js","index.js"],"names":["initialState","clicks","amount","auto","cost","double","mega","ultra","monster","reducer","state","action","type","tier","payload","Error","Clicker","dispatch","className","onClick","Autoclicker","memo","enabled","undefined","App","useReducer","callback","useRef","useEffect","current","currentClics","totalCount","Object","keys","reduce","acc","cur","idx","interval","setInterval","clearInterval","href","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.689406b6.chunk.js","sourcesContent":["const initialState = {\r\n  clicks: { amount: 0 },\r\n  auto: { cost: 10, amount: 0 },\r\n  double: { cost: 20, amount: 0 },\r\n  mega: { cost: 100, amount: 0 },\r\n  ultra: { cost: 1000, amount: 0 },\r\n  monster: { cost: 10000, amount: 0 },\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'click':\r\n      return { ...state, clicks: { ...state.clicks, amount: state.clicks.amount + 1 } };\r\n    case 'increase':\r\n      return {\r\n        ...state,\r\n        [action.tier]: { ...state[action.tier], amount: state[action.tier].amount + 1 },\r\n        clicks: { amount: state.clicks.amount - state[action.tier].cost },\r\n      };\r\n    case 'decrease':\r\n      return {\r\n        ...state,\r\n        [action.tier]: { ...state[action.tier], amount: state[action.tier].amount - 1 },\r\n        clicks: { amount: state.clicks.amount + state[action.tier].cost },\r\n      };\r\n    case 'update':\r\n      return (action.payload === state.clicks.amount)\r\n        ? state\r\n        : { ...state, clicks: { ...state.clicks, amount: action.payload } };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nexport { reducer, initialState };\r\n","import React from 'react';\r\n\r\nconst Clicker = ({ amount, dispatch }) => (\r\n  <div className=\"clicker\">\r\n    <h1>{amount}</h1>\r\n    <button\r\n      className=\"buy\"\r\n      type=\"button\"\r\n      onClick={() => dispatch({ type: 'click' })}\r\n    >\r\n      click button\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Clicker;\r\n","import React, { memo } from 'react';\r\n\r\nconst Autoclicker = memo(({ tier, amount, cost, dispatch, enabled }) => {\r\n  const buy = () => dispatch({ type: 'increase', tier });\r\n  const sell = () => dispatch({ type: 'decrease', tier });\r\n\r\n  return (\r\n    <div className=\"clicker\">\r\n      <div className=\"info\">\r\n        <h2>{`${amount} Ã— ${tier}clicker`}</h2>\r\n        <p>{`this ${tier}clicker buys and sells for ${cost}`}</p>\r\n      </div>\r\n      <button\r\n        className={`buy ${enabled ? undefined : 'disabled'}`}\r\n        type=\"button\"\r\n        onClick={buy}\r\n      >\r\n        {`buy ${tier}clicker`}\r\n      </button>\r\n      {\r\n        amount > 0 && <button className=\"sell\" type=\"button\" onClick={sell}>-</button>\r\n      }\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Autoclicker;\r\n","import React, { useEffect, useRef, useReducer } from 'react';\r\n\r\nimport { reducer, initialState } from './reducer';\r\nimport Clicker from './Clicker';\r\nimport Autoclicker from './Autoclicker';\r\n\r\nconst App = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const callback = useRef();\r\n\r\n  useEffect(() => {\r\n    callback.current = () => {\r\n      const currentClics = state.clicks.amount;\r\n      const totalCount = Object.keys(state)\r\n        .reduce(\r\n          (acc, cur, idx) => idx === 0\r\n            ? acc\r\n            : acc + state[cur].amount * (state[cur].cost * 0.1),\r\n          currentClics,\r\n        );\r\n\r\n      dispatch({ type: 'update', payload: totalCount });\r\n    };\r\n  }, [state]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => callback.current(), 1000);\r\n    return () => clearInterval(interval);\r\n  }, [callback]);\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"banner\">\r\n        This is an accompanying example to a clicker game tutorial using React. See\r\n        <a href=\"https://github.com/Alaricus/clicker-tutorial\">GitHub</a>\r\n        for more details.\r\n      </div>\r\n      <Clicker amount={state.clicks.amount} dispatch={dispatch} />\r\n      {\r\n        Object.keys(state).map((tier, idx) => {\r\n          if (idx === 0) { return null; }\r\n          const { cost, amount } = state[tier];\r\n          return (state.clicks.amount >= cost || amount > 0) && (\r\n            <Autoclicker\r\n              key={tier}\r\n              tier={tier}\r\n              amount={amount}\r\n              cost={cost}\r\n              enabled={state.clicks.amount >= cost}\r\n              dispatch={dispatch}\r\n            />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}